" 空行挿入
nnoremap O :<C-u>call append(expand('.'), '')<CR>j

" 最後に開いていた場所をカレント行にする
augroup StartFromLastLine
  autocmd!
  autocmd BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal g`\"" | endif
augroup END

" マッピングYを、行末までのヤンクにする設定
nnoremap Y y$

" 数字インクリメント
nnoremap + <C-a>

" 数字デクリメント
nnoremap - <C-x>

" スワップファイルがあるときにReadOnlyで開く
augroup swapchoice-readonly
  autocmd!
  autocmd SwapExists * let v:swapchoice = 'o'
augroup END


"===============================================================================
" バッファや最近開いたファイルをもう一度開く
"===============================================================================
" http://blog.remora.cx/2010/12/vim-ref-with-unite.html
" 入力モードで開始する
let g:unite_enable_start_insert=1
" バッファ一覧
noremap <C-c> :Unite buffer<CR>
" ファイル一覧
noremap <C-s> :Unite -buffer-name=file file<CR>
" 最近使ったファイルの一覧
noremap <C-x> :Unite file_mru<CR>
" sourcesを「今開いているファイルのディレクトリ」とする
noremap :uff :<C-u>UniteWithBufferDir file -buffer-name=file<CR>
" ウィンドウを分割して開く
au FileType unite nnoremap <silent> <buffer> <expr> <C-J> unite#do_action('split')
au FileType unite inoremap <silent> <buffer> <expr> <C-J> unite#do_action('split')
" ウィンドウを縦に分割して開く
au FileType unite nnoremap <silent> <buffer> <expr> <C-K> unite#do_action('vsplit')
au FileType unite inoremap <silent> <buffer> <expr> <C-K> unite#do_action('vsplit')
" ESCキーを2回押すと終了する
au FileType unite nnoremap <silent> <buffer> <ESC><ESC> :q<CR>
au FileType unite inoremap <silent> <buffer> <ESC><ESC> <ESC>:q<CR>


